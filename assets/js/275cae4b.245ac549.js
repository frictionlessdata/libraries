(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{114:function(e,a,t){"use strict";t.d(a,"a",(function(){return b})),t.d(a,"b",(function(){return h}));var r=t(0),n=t.n(r);function c(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){c(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=n.a.createContext({}),p=function(e){var a=n.a.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},b=function(e){var a=p(e.components);return n.a.createElement(l.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.a.createElement(n.a.Fragment,{},a)}},u=n.a.forwardRef((function(e,a){var t=e.components,r=e.mdxType,c=e.originalType,i=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),b=p(t),u=r,h=b["".concat(i,".").concat(u)]||b[u]||d[u]||c;return t?n.a.createElement(h,s(s({ref:a},l),{},{components:t})):n.a.createElement(h,s({ref:a},l))}));function h(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var c=t.length,i=new Array(c);i[0]=u;var s={};for(var o in a)hasOwnProperty.call(a,o)&&(s[o]=a[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<c;l++)i[l]=t[l];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},82:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return s})),t.d(a,"metadata",(function(){return o})),t.d(a,"toc",(function(){return l})),t.d(a,"default",(function(){return b}));var r=t(3),n=t(8),c=(t(0),t(114)),i=["components"],s={title:"datapackage-rb"},o={unversionedId:"data-package/ruby",id:"data-package/ruby",isDocsHomePage:!1,title:"datapackage-rb",description:"Travis",source:"@site/docs/data-package/ruby.md",slug:"/data-package/ruby",permalink:"/docs/data-package/ruby",editUrl:"https://github.com/frictionlessdata/libraries/edit/master/docs/docs/data-package/ruby.md",version:"current",lastUpdatedBy:"roll",lastUpdatedAt:1623069663,formattedLastUpdatedAt:"6/7/2021",sidebar:"data-package",previous:{title:"datapackage-js",permalink:"/docs/data-package/javascript"},next:{title:"datapackage-php",permalink:"/docs/data-package/php"}},l=[{value:"Installation",id:"installation",children:[]},{value:"Reading a Data Package",id:"reading-a-data-package",children:[]},{value:"Reading Data Resources",id:"reading-data-resources",children:[]},{value:"Creating a Data Package",id:"creating-a-data-package",children:[]},{value:"Profiles",id:"profiles",children:[{value:"Profiles in the local cache",id:"profiles-in-the-local-cache",children:[]},{value:"Profiles from elsewhere",id:"profiles-from-elsewhere",children:[]}]},{value:"Validation",id:"validation",children:[{value:"Validating a Resource",id:"validating-a-resource",children:[]},{value:"Validating a Package",id:"validating-a-package",children:[]}]},{value:"Developer notes",id:"developer-notes",children:[{value:"Updating the local schemas cache",id:"updating-the-local-schemas-cache",children:[]}]}],p={toc:l};function b(e){var a=e.components,t=Object(n.a)(e,i);return Object(c.b)("wrapper",Object(r.a)({},p,t,{components:a,mdxType:"MDXLayout"}),Object(c.b)("p",null,Object(c.b)("a",{parentName:"p",href:"https://travis-ci.org/frictionlessdata/datapackage-rb"},Object(c.b)("img",{parentName:"a",src:"https://travis-ci.org/frictionlessdata/datapackage-rb.svg?branch=master",alt:"Travis"})),"\n",Object(c.b)("a",{parentName:"p",href:"https://coveralls.io/r/frictionlessdata/datapackage-rb?branch=master"},Object(c.b)("img",{parentName:"a",src:"http://img.shields.io/coveralls/frictionlessdata/datapackage-rb.svg?branch=master",alt:"Coveralls"})),"\n",Object(c.b)("a",{parentName:"p",href:"https://rubygems.org/gems/datapackage"},Object(c.b)("img",{parentName:"a",src:"http://img.shields.io/gem/v/datapackage.svg",alt:"Gem Version"})),"\n",Object(c.b)("a",{parentName:"p",href:"http://semver.org/"},Object(c.b)("img",{parentName:"a",src:"https://img.shields.io/badge/versions-SemVer-brightgreen.svg",alt:"SemVer"})),"\n",Object(c.b)("a",{parentName:"p",href:"https://gitter.im/frictionlessdata/chat"},Object(c.b)("img",{parentName:"a",src:"https://img.shields.io/gitter/room/frictionlessdata/chat.svg",alt:"Gitter"}))),Object(c.b)("p",null,"A ruby library for working with ",Object(c.b)("a",{parentName:"p",href:"https://specs.frictionlessdata.io/data-package/"},"Data Packages"),"."),Object(c.b)("p",null,"The library is intending to support:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"Parsing and using data package metadata and data"),Object(c.b)("li",{parentName:"ul"},"Validating data packages to ensure they conform with the Data Package specification")),Object(c.b)("h2",{id:"installation"},"Installation"),Object(c.b)("p",null,"Add the gem into your Gemfile:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre"},"gem 'datapackage.rb'\n")),Object(c.b)("p",null,"Or:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre"},"gem install datapackage\n")),Object(c.b)("h2",{id:"reading-a-data-package"},"Reading a Data Package"),Object(c.b)("p",null,"Require the gem, if you need to:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ruby"},"require 'datapackage'\n")),Object(c.b)("p",null,"Parsing a data package descriptor from a remote location:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ruby"},'package = DataPackage::Package.new( "http://example.org/datasets/a/datapackage.json" )\n')),Object(c.b)("p",null,"This assumes that ",Object(c.b)("inlineCode",{parentName:"p"},"http://example.org/datasets/a/datapackage.json")," exists.\nSimilarly you can load a package descriptor from a local JSON file."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ruby"},'package = DataPackage::Package.new( "/my/data/package/datapackage.json" )\n')),Object(c.b)("p",null,"The data package descriptor\ni.e. ",Object(c.b)("inlineCode",{parentName:"p"},"datapackage.json")," file, is expected to be at the ",Object(c.b)("em",{parentName:"p"},"root")," directory\nof the data package and the ",Object(c.b)("inlineCode",{parentName:"p"},"path")," attribute of the package's ",Object(c.b)("inlineCode",{parentName:"p"},"resources")," will be resolved\nrelative to it."),Object(c.b)("p",null,"You can also load a data package descriptor directly from a Hash:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ruby"}," descriptor = {\n  'resources'=> [\n    {\n      'name'=> 'example',\n      'profile'=> 'tabular-data-resource',\n      'data'=> [\n        ['height', 'age', 'name'],\n        ['180', '18', 'Tony'],\n        ['192', '32', 'Jacob'],\n      ],\n      'schema'=>  {\n        'fields'=> [\n          {'name'=> 'height', 'type'=> 'integer'},\n          {'name'=> 'age', 'type'=> 'integer'},\n          {'name'=> 'name', 'type'=> 'string'},\n        ],\n      }\n    }\n  ]\n}\n\npackage = DataPackage::Package.new(descriptor)\n")),Object(c.b)("p",null,"There are a set of helper methods for accessing data from the package, e.g:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ruby"},"package.name\npackage.title\npackage.description\npackage.homepage\npackage.license\n")),Object(c.b)("h2",{id:"reading-data-resources"},"Reading Data Resources"),Object(c.b)("p",null,"A data package must contain an array of ",Object(c.b)("a",{parentName:"p",href:"https://specs.frictionlessdata.io/data-resource"},"Data Resources"),".\nYou can access the resources in your Data Package either by their name or by their index in the ",Object(c.b)("inlineCode",{parentName:"p"},"resources")," array:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ruby"},"first_resource = package.resources[0]\nfirst_resource = package.get_resource('example')\n\n# Get info about the data source of this resource\nfirst_resource.inline?\nfirst_resource.local?\nfirst_resource.remote?\nfirst_resource.multipart?\nfirst_resource.tabular?\nfirst_resource.source\n")),Object(c.b)("p",null,"You can then read the source depending on its type. For example if resource is local and not multipart it could by open as a file: ",Object(c.b)("inlineCode",{parentName:"p"},"File.open(resource.source)"),"."),Object(c.b)("p",null,"If a resource complies with the ",Object(c.b)("a",{parentName:"p",href:"https://specs.frictionlessdata.io/tabular-data-resource/"},"Tabular Data Resource spec")," or uses the\n",Object(c.b)("inlineCode",{parentName:"p"},"tabular-data-resource")," ",Object(c.b)("a",{parentName:"p",href:"#profiles"},"profile")," you can read resource rows:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ruby"},"resoure = package.resources[0]\nresource.tabular?\nresource.headers\nresource.schema\n\n# Read the the whole rows at once\ndata = resource.read\ndata = resource.read(keyed: true)\n\n# Or iterate through it\ndata = resource.iter {|row| print row}\n")),Object(c.b)("p",null,"See ",Object(c.b)("a",{parentName:"p",href:"https://github.com/frictionlessdata/tableschema-rb"},"TableSchema")," documentation for other things you can do with tabular resource."),Object(c.b)("h2",{id:"creating-a-data-package"},"Creating a Data Package"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ruby"},"package = DataPackage::Package.new\n\n# Add package properties\npackage.name = 'my_sleep_duration'\n\n# Add a resource\npackage.add_resource(\n  {\n    'name'=> 'sleep_durations_this_week',\n    'data'=> [7, 8, 5, 6, 9, 7, 8],\n  }\n)\n")),Object(c.b)("p",null,"If the resource is valid it will be added to the ",Object(c.b)("inlineCode",{parentName:"p"},"resources")," array of the Data Package;\nif it's invalid it will not be added and you should try creating and ",Object(c.b)("a",{parentName:"p",href:"#validating-a-resource"},"validating")," your resource to see why it fails."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ruby"},"# Update a resource\nmy_resource = package.get_resource('sleep_durations_this_week')\nmy_resource['schema'] = {\n  'fields'=> [\n    {'name'=> 'number_hours', 'type'=> 'integer'},\n  ]\n}\n\n# Save the Data Package descriptor to the target file\npackage.save('datapackage.json')\n\n# Remove a resource\npackage.remove_resource('sleep_durations_this_week')\n")),Object(c.b)("h2",{id:"profiles"},"Profiles"),Object(c.b)("p",null,"Data Package and Data Resource descriptors can be validated against  ",Object(c.b)("a",{parentName:"p",href:"https://tools.ietf.org/html/draft-zyp-json-schema-04"},"JSON schemas")," that we call ",Object(c.b)("inlineCode",{parentName:"p"},"profiles"),"."),Object(c.b)("p",null,"By default, this gem uses the standard ",Object(c.b)("a",{parentName:"p",href:"http://specs.frictionlessdata.io/schemas/data-package.json"},"Data Package profile")," and ",Object(c.b)("a",{parentName:"p",href:"http://specs.frictionlessdata.io/schemas/data-resource.json"},"Data Resource profile")," but alternative profiles are available for both."),Object(c.b)("p",null,"According to the ",Object(c.b)("a",{parentName:"p",href:"https://specs.frictionlessdata.io/profiles/"},"specs")," the value of\nthe ",Object(c.b)("inlineCode",{parentName:"p"},"profile")," property can be either a URL or an indentifier from ",Object(c.b)("a",{parentName:"p",href:"https://specs.frictionlessdata.io/schemas/registry.json"},"the registry"),"."),Object(c.b)("h3",{id:"profiles-in-the-local-cache"},"Profiles in the local cache"),Object(c.b)("p",null,"The profiles from the registry come bundled with the gem. You can reference them in your Data Package descriptor by their identifier in ",Object(c.b)("a",{parentName:"p",href:"https://specs.frictionlessdata.io/schemas/registry.json"},"the registry"),":"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"data-package")," the default profile for a ",Object(c.b)("a",{parentName:"li",href:"https://specs.frictionlessdata.io/data-package/"},"Data Package")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"data-resource")," the default profile for a ",Object(c.b)("a",{parentName:"li",href:"https://specs.frictionlessdata.io/data-resource"},"Data Resource")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"tabular-data-package")," for a ",Object(c.b)("a",{parentName:"li",href:"http://specs.frictionlessdata.io/tabular-data-package/"},"Tabular Data Package")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"tabular-data-resource")," for a ",Object(c.b)("a",{parentName:"li",href:"https://specs.frictionlessdata.io/tabular-data-resource/"},"Tabular Data Resource")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"fiscal-data-package")," for a ",Object(c.b)("a",{parentName:"li",href:"http://fiscal.dataprotocols.org/spec/"},"Fiscal Data Package"))),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ruby"},'{\n  "profile": "tabular-data-package"\n}\n')),Object(c.b)("h3",{id:"profiles-from-elsewhere"},"Profiles from elsewhere"),Object(c.b)("p",null,"If you have a custom profile schema you can reference it by its URL:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ruby"},'{\n  "profile": "https://specs.frictionlessdata.io/schemas/tabular-data-package.json"\n}\n')),Object(c.b)("h2",{id:"validation"},"Validation"),Object(c.b)("p",null,"Data Resources and Data Packages are validated against their profiles to ensure they respect the expected structure."),Object(c.b)("h3",{id:"validating-a-resource"},"Validating a Resource"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ruby"},"descriptor = {\n  'name'=> 'incorrect name',\n  'path'=> 'https://cdn.rawgit.com/frictionlessdata/datapackage-rb/master/spec/fixtures/test-pkg/test.csv',\n}\nresource = DataPackage::Resource.new(descriptor, base_path='')\n\n# Returns true if resource is valid, false otherwise\nresource.valid?\n\n# Returns true or raises DataPackage::ValidationError\nresource.validate\n\n# Iterate through validation errors\nresource.iter_errors{ |err| p err}\n")),Object(c.b)("h3",{id:"validating-a-package"},"Validating a Package"),Object(c.b)("p",null,"The same methods used to check the validity of a Resource - ",Object(c.b)("inlineCode",{parentName:"p"},"valid?"),", ",Object(c.b)("inlineCode",{parentName:"p"},"validate")," and ",Object(c.b)("inlineCode",{parentName:"p"},"iter_errors"),"- are also available for a Package.\nThe difference is that after a Package descriptor is validated against its ",Object(c.b)("inlineCode",{parentName:"p"},"profile"),", each of its ",Object(c.b)("inlineCode",{parentName:"p"},"resources")," are also validated against their ",Object(c.b)("inlineCode",{parentName:"p"},"profile"),"."),Object(c.b)("p",null,"In order for a Package to be valid all its Resources have to be valid."),Object(c.b)("h2",{id:"developer-notes"},"Developer notes"),Object(c.b)("p",null,"These notes are intended to help people that want to contribute to this package itself. If you just want to use it, you can safely ignore them."),Object(c.b)("p",null,"After checking out the repo, run ",Object(c.b)("inlineCode",{parentName:"p"},"bundle")," to install dependencies. Then, run ",Object(c.b)("inlineCode",{parentName:"p"},"rake spec")," to run the tests."),Object(c.b)("p",null,"To install this gem onto your local machine, run ",Object(c.b)("inlineCode",{parentName:"p"},"bundle exec rake install"),".\nTo release a new version, update the version number in ",Object(c.b)("inlineCode",{parentName:"p"},"version.rb"),", and then run ",Object(c.b)("inlineCode",{parentName:"p"},"bundle exec rake release"),",\nwhich will create a git tag for the version, push git commits and tags, and push the ",Object(c.b)("inlineCode",{parentName:"p"},".gem")," file to ",Object(c.b)("a",{parentName:"p",href:"https://rubygems.org"},"rubygems.org"),"."),Object(c.b)("h3",{id:"updating-the-local-schemas-cache"},"Updating the local schemas cache"),Object(c.b)("p",null,"We cache the local schemas from ",Object(c.b)("a",{parentName:"p",href:"https://specs.frictionlessdata.io/schemas/registry.json"},"https://specs.frictionlessdata.io/schemas/registry.json"),".\nThe local schemas should be kept up to date with the remote ones using:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre"},"rake update_profiles\n")))}b.isMDXComponent=!0}}]);